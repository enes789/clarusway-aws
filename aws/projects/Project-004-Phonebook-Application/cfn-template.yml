AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Phonebook Application. 
  This template creates Python Flask Web Application on Amazon Linux 2 (XXXXXXXXXXXXXXXXX) 
  EC2 Instance with custom security group allowing http connections on port 80 and SSH connection on port 22.
  Template should create Application Load Balancer with Auto Scaling Group of Amazon Linux 2 EC2 Instances within default VPC.
  Phonebook Application is downloaded from Github repository, then installed on Flask.

Parameters:
  Keyname:
    Description: This is options of my key names
    Type: AWS::EC2::KeyPair::KeyName
  DBUsername:
    NoEcho: 'true'
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password MySQL database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  SecGroup:
    Description: for RDS
    Type: List<AWS::EC2::SecurityGroup::Id>   

Resources:
  ALBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for ALB #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for App from ALB #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecGroup.GroupId
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        
    
  WebServerLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        ImageId: ami-0742b4e673072066f
        InstanceType: t2.micro
        KeyName: !Ref Keyname
        SecurityGroupIds: 
          - !GetAtt WebServerSecGroup.GroupId
        TagSpecifications: 
          - ResourceType: instance
            Tags: 
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName}
        UserData:
          Fn::Base64: !Sub  
           - | 
            #! /bin/bash
            
            yum update -y
            yum install python3 -y
            pip3 install flask
            pip3 install flask-mysql
            cd /home/ec2-user
            FOLDER='https://raw.githubusercontent.com/enes789/aws-devops/main/aws/projects/Project-004-Phonebook-Application'
            wget $FOLDER/phonebook-app.py
            wget -P templates $FOLDER/templates/index.html
            wget -P templates $FOLDER/templates/delete.html
            wget -P templates $FOLDER/templates/add-update.html
            echo ${RDSEndpointURL} > /home/ec2-user/dbserver.endpoint
            python3 phonebook-app.py
           - {RDSEndpointURL : !GetAtt WebServerRDS.Endpoint.Address} 
  WebServerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 25
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !GetAtt WebServerSecGroup.VpcId

  WebServerALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - !GetAtt ALBSecGroup.GroupId
      Subnets:
        - subnet-60950d41
        - subnet-8622bdd9
        - subnet-6c1c8e0a
        - subnet-d07d509d
        - subnet-a6b01197
        - subnet-2df0a423
      Type: application

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: #required
        - Type: forward
          TargetGroupArn: !Ref WebServerTargetGroup
      LoadBalancerArn: !Ref WebServerALB #required
      Port: 80
      Protocol: HTTP

  WebServerASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      DesiredCapacity: 2
      HealthCheckGracePeriod: 200
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebServerLT
        Version: !GetAtt WebServerLT.LatestVersionNumber
      MaxSize: 3 #required
      MinSize: 1 #required
      TargetGroupARNs:
        - !Ref WebServerTargetGroup  

  WebServerRDS:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 7
      DBInstanceClass: db.t2.micro #required
      DBInstanceIdentifier: clarusway-project-4
      DBName: clarusway_phonebook
      Engine: MySQL
      EngineVersion: 8.0.19
      MasterUserPassword: !Ref DBPassword
      MasterUsername: !Ref DBUsername
      Port: 3306
      PubliclyAccessible: true
      StorageType: gp2
      VPCSecurityGroups: !Ref SecGroup 
    DeletionPolicy: Delete

Outputs:
  AppURL:
    Value: !Sub 
      - http://${PublicAddress}
      - PublicAddress: !GetAtt WebServerALB.DNSName
    Description: URL of the Phonebook Application